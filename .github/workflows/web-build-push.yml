name: build-and-push-frontend

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
      - '.github/workflows/web-build-push.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
      - '.github/workflows/web-build-push.yml'

concurrency:
  group: fe-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-web:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # PR이 아닐 때만 Docker Hub 로그인
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # (선택) 메타 정보
      - name: Docker meta (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: sonej/gundaero-web
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
          labels: |
            org.opencontainers.image.title=gundaero-web
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & (maybe) Push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          # 메타 스텝을 쓰면 아래 한 줄로
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=sonej/gundaero-web:buildcache
          cache-to: type=registry,ref=sonej/gundaero-web:buildcache,mode=max
